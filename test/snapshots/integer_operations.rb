ProgramNode(
  Scope([]),
  StatementsNode(
    [CallNode(IntegerNode(), nil, BANG("!"), nil, nil, nil, nil, "!"),
     CallNode(IntegerNode(), nil, TILDE("~"), nil, nil, nil, nil, "~"),
     CallNode(
       IntegerNode(),
       nil,
       BANG_EQUAL("!="),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "!="
     ),
     CallNode(
       IntegerNode(),
       nil,
       BANG_TILDE("!~"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "!~"
     ),
     CallNode(
       IntegerNode(),
       nil,
       PERCENT("%"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "%"
     ),
     CallNode(
       IntegerNode(),
       nil,
       AMPERSAND("&"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "&"
     ),
     CallNode(
       IntegerNode(),
       nil,
       STAR("*"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "*"
     ),
     CallNode(
       IntegerNode(),
       nil,
       STAR_STAR("**"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "**"
     ),
     CallNode(
       IntegerNode(),
       nil,
       PLUS("+"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "+"
     ),
     CallNode(
       IntegerNode(),
       nil,
       MINUS("-"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "-"
     ),
     CallNode(
       IntegerNode(),
       nil,
       SLASH("/"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "/"
     ),
     CallNode(
       CallNode(
         IntegerNode(),
         nil,
         SLASH("/"),
         nil,
         ArgumentsNode([IntegerNode()]),
         nil,
         nil,
         "/"
       ),
       nil,
       SLASH("/"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "/"
     ),
     CallNode(
       IntegerNode(),
       nil,
       LESS("<"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "<"
     ),
     CallNode(
       IntegerNode(),
       nil,
       LESS_LESS("<<"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "<<"
     ),
     CallNode(
       IntegerNode(),
       nil,
       LESS_EQUAL("<="),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "<="
     ),
     CallNode(
       IntegerNode(),
       nil,
       LESS_EQUAL_GREATER("<=>"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "<=>"
     ),
     CallNode(
       IntegerNode(),
       nil,
       EQUAL_EQUAL("=="),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "=="
     ),
     CallNode(
       IntegerNode(),
       nil,
       EQUAL_EQUAL_EQUAL("==="),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "==="
     ),
     CallNode(
       IntegerNode(),
       nil,
       EQUAL_TILDE("=~"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "=~"
     ),
     CallNode(
       IntegerNode(),
       nil,
       GREATER(">"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       ">"
     ),
     CallNode(
       IntegerNode(),
       nil,
       GREATER_EQUAL(">="),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       ">="
     ),
     CallNode(
       IntegerNode(),
       nil,
       GREATER_GREATER(">>"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       ">>"
     ),
     CallNode(
       IntegerNode(),
       nil,
       CARET("^"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "^"
     ),
     CallNode(
       IntegerNode(),
       nil,
       PIPE("|"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "|"
     ),
     AndNode(IntegerNode(), IntegerNode(), AMPERSAND_AMPERSAND("&&")),
     AndNode(IntegerNode(), IntegerNode(), KEYWORD_AND("and")),
     CallNode(
       IntegerNode(),
       nil,
       STAR("*"),
       nil,
       ArgumentsNode(
         [CallNode(
            IntegerNode(),
            nil,
            STAR_STAR("**"),
            nil,
            ArgumentsNode([IntegerNode()]),
            nil,
            nil,
            "**"
          )]
       ),
       nil,
       nil,
       "*"
     ),
     CallNode(
       CallNode(
         IntegerNode(),
         nil,
         STAR("*"),
         nil,
         ArgumentsNode([IntegerNode()]),
         nil,
         nil,
         "*"
       ),
       nil,
       PLUS("+"),
       nil,
       ArgumentsNode([IntegerNode()]),
       nil,
       nil,
       "+"
     ),
     OrNode(IntegerNode(), IntegerNode(), (215..217)),
     OrNode(IntegerNode(), IntegerNode(), (223..225)),
     CallNode(
       IntegerNode(),
       nil,
       PLUS("+"),
       nil,
       ArgumentsNode(
         [CallNode(
            IntegerNode(),
            nil,
            STAR("*"),
            nil,
            ArgumentsNode([IntegerNode()]),
            nil,
            nil,
            "*"
          )]
       ),
       nil,
       nil,
       "+"
     ),
     ParenthesesNode(
       StatementsNode(
         [CallNode(
            IntegerNode(),
            nil,
            PLUS("+"),
            nil,
            ArgumentsNode([IntegerNode()]),
            nil,
            nil,
            "+"
          )]
       ),
       (240..241),
       (246..247)
     )]
  )
)
