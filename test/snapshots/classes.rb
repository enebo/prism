ProgramNode(
  Scope([]),
  StatementsNode(
    [ClassNode(
       Scope([IDENTIFIER("a")]),
       KEYWORD_CLASS("class"),
       ConstantReadNode(),
       nil,
       nil,
       StatementsNode(
         [LocalVariableWriteNode(IDENTIFIER("a"), EQUAL("="), IntegerNode())]
       ),
       KEYWORD_END("end")
     ),
     ClassNode(
       Scope([]),
       KEYWORD_CLASS("class"),
       ConstantReadNode(),
       nil,
       nil,
       BeginNode(
         nil,
         StatementsNode([]),
         nil,
         nil,
         EnsureNode(
           KEYWORD_ENSURE("ensure"),
           StatementsNode([]),
           KEYWORD_END("end")
         ),
         KEYWORD_END("end")
       ),
       KEYWORD_END("end")
     ),
     ClassNode(
       Scope([]),
       KEYWORD_CLASS("class"),
       ConstantReadNode(),
       nil,
       nil,
       BeginNode(
         nil,
         StatementsNode([]),
         RescueNode(
           KEYWORD_RESCUE("rescue"),
           [],
           nil,
           nil,
           StatementsNode([]),
           nil
         ),
         ElseNode(KEYWORD_ELSE("else"), StatementsNode([]), SEMICOLON(";")),
         EnsureNode(
           KEYWORD_ENSURE("ensure"),
           StatementsNode([]),
           KEYWORD_END("end")
         ),
         KEYWORD_END("end")
       ),
       KEYWORD_END("end")
     ),
     ClassNode(
       Scope([IDENTIFIER("a")]),
       KEYWORD_CLASS("class"),
       ConstantReadNode(),
       LESS("<"),
       ConstantReadNode(),
       StatementsNode(
         [LocalVariableWriteNode(IDENTIFIER("a"), EQUAL("="), IntegerNode())]
       ),
       KEYWORD_END("end")
     ),
     SingletonClassNode(
       Scope([]),
       KEYWORD_CLASS("class"),
       LESS_LESS("<<"),
       CallNode(
         CallNode(nil, nil, IDENTIFIER("foo"), nil, nil, nil, nil, "foo"),
         nil,
         KEYWORD_NOT("not"),
         nil,
         nil,
         nil,
         nil,
         "!"
       ),
       StatementsNode([]),
       KEYWORD_END("end")
     ),
     ClassNode(
       Scope([]),
       KEYWORD_CLASS("class"),
       ConstantReadNode(),
       nil,
       nil,
       StatementsNode(
         [SingletonClassNode(
            Scope([]),
            KEYWORD_CLASS("class"),
            LESS_LESS("<<"),
            SelfNode(),
            BeginNode(
              nil,
              StatementsNode([]),
              nil,
              nil,
              EnsureNode(
                KEYWORD_ENSURE("ensure"),
                StatementsNode([]),
                KEYWORD_END("end")
              ),
              KEYWORD_END("end")
            ),
            KEYWORD_END("end")
          )]
       ),
       KEYWORD_END("end")
     ),
     ClassNode(
       Scope([]),
       KEYWORD_CLASS("class"),
       ConstantReadNode(),
       nil,
       nil,
       StatementsNode(
         [SingletonClassNode(
            Scope([]),
            KEYWORD_CLASS("class"),
            LESS_LESS("<<"),
            SelfNode(),
            BeginNode(
              nil,
              StatementsNode([]),
              RescueNode(
                KEYWORD_RESCUE("rescue"),
                [],
                nil,
                nil,
                StatementsNode([]),
                nil
              ),
              ElseNode(
                KEYWORD_ELSE("else"),
                StatementsNode([]),
                SEMICOLON(";")
              ),
              EnsureNode(
                KEYWORD_ENSURE("ensure"),
                StatementsNode([]),
                KEYWORD_END("end")
              ),
              KEYWORD_END("end")
            ),
            KEYWORD_END("end")
          )]
       ),
       KEYWORD_END("end")
     ),
     SingletonClassNode(
       Scope([]),
       KEYWORD_CLASS("class"),
       LESS_LESS("<<"),
       CallNode(
         CallNode(nil, nil, IDENTIFIER("foo"), nil, nil, nil, nil, "foo"),
         DOT("."),
         IDENTIFIER("bar"),
         nil,
         nil,
         nil,
         nil,
         "bar"
       ),
       StatementsNode([]),
       KEYWORD_END("end")
     ),
     SingletonClassNode(
       Scope([]),
       KEYWORD_CLASS("class"),
       LESS_LESS("<<"),
       CallNode(
         CallNode(nil, nil, IDENTIFIER("foo"), nil, nil, nil, nil, "foo"),
         DOT("."),
         IDENTIFIER("bar"),
         nil,
         nil,
         nil,
         nil,
         "bar"
       ),
       StatementsNode([]),
       KEYWORD_END("end")
     ),
     SingletonClassNode(
       Scope([]),
       KEYWORD_CLASS("class"),
       LESS_LESS("<<"),
       SelfNode(),
       StatementsNode([]),
       KEYWORD_END("end")
     ),
     SingletonClassNode(
       Scope([]),
       KEYWORD_CLASS("class"),
       LESS_LESS("<<"),
       SelfNode(),
       StatementsNode([]),
       KEYWORD_END("end")
     ),
     SingletonClassNode(
       Scope([]),
       KEYWORD_CLASS("class"),
       LESS_LESS("<<"),
       SelfNode(),
       StatementsNode(
         [CallNode(
            IntegerNode(),
            nil,
            PLUS("+"),
            nil,
            ArgumentsNode([IntegerNode()]),
            nil,
            nil,
            "+"
          )]
       ),
       KEYWORD_END("end")
     ),
     SingletonClassNode(
       Scope([]),
       KEYWORD_CLASS("class"),
       LESS_LESS("<<"),
       SelfNode(),
       StatementsNode(
         [CallNode(
            IntegerNode(),
            nil,
            PLUS("+"),
            nil,
            ArgumentsNode([IntegerNode()]),
            nil,
            nil,
            "+"
          )]
       ),
       KEYWORD_END("end")
     )]
  )
)
